/*
 * Arethusa - a backend-independent client-side annotation framework
 * http://github.com/latin-language-toolkit/arethusa
 *
 * Version 0.2.5
 * built from branch mbrunet
 * at 708947366e315f6ce0185841a699607683fcbd07
 * on 2015-06-12T15:35:55.069Z
 *
 * Published under the MIT license
 */

"use strict";angular.module("arethusa.morph",[]),angular.module("arethusa.morph").factory("BspMorphRetriever",["configurator",function(a){function b(a,b){b.forEach(function(b){delete a[b]})}function c(a,b){b.forEach(function(b){var c=a[b];c&&(a[b]=c.$)})}function d(a,b){if(b)for(var c in b){var d=b[c],e=a[c];delete a[c],a[d]=e}}function e(a,b){if(b)for(var c in b){var d=a[c],e=b[c],f=e[d];f&&(a[c]=f)}}function f(a){return a?{uri:a,urn:a.slice(a.indexOf("urn:"))}:void 0}return function(g){var h=this,i=a.provideResource(g.resource);this.getWord=function(a){return i.get({word:a})},this.abort=i.abort,this.getData=function(a,g){return h.getWord(a).then(function(a){try{var i=arethusaUtil.toAry(a.data.RDF.Annotation.Body),j=arethusaUtil.inject([],i,function(a,g){var i=g.rest.entry,j=i.dict.hdwd.$;arethusaUtil.toAry(i.infl).forEach(function(g){b(g,["term","stemtype"]),c(g,["case","pofs"]),d(g,h.mapping.attributes),e(g,h.mapping.values),a.push({lexInvLocation:f(i.uri),lemma:j,attributes:g,origin:"bsp/morpheus"})})});g(j)}catch(k){return[]}}),[]}}}]),angular.module("arethusa.morph").directive("accordionHighlighter",function(){return{restrict:"A",link:function(a,b,c){var d="accordion-selected";a.$watch("form.selected",function(a,c){a?b.parent().addClass(d):b.parent().removeClass(d)})}}}),angular.module("arethusa.morph").directive("formSelector",function(){return{restrict:"A",link:function(a,b,c){function d(b){b.stopPropagation(),a.$apply(function(){a.form.selected?a.plugin.unsetState(e):a.plugin.setState(e,a.form)}),b.target.blur()}var e=a.id;a.$watch("form.selected",function(b,c){a.iconClass=b?"minus":"plus",a.title=b?"deselect":"select"}),b.bind("click",d)},template:'      <input        type="checkbox"        class="postag-selector"        ng-checked="form.selected">      </input>    '}}),angular.module("arethusa.morph").directive("mirrorMorphForm",["morph",function(a){return{restrict:"A",scope:{form:"=mirrorMorphForm",tokenId:"="},link:function(b,c,d){function e(){var a=angular.copy(b.form);return delete a.origin,a}{var f=a.analyses[b.tokenId];"mfc"+b.tokenId}c.bind("click",function(){b.$apply(function(){f.customForm=e()})})}}}]),angular.module("arethusa.morph").directive("morphForm",function(){return{restrict:"E",scope:!0,templateUrl:"templates/morph_form.html"}}),angular.module("arethusa.morph").directive("morphFormAttributes",["morph","notifier","state",function(a,b,c){return{restrict:"A",scope:{form:"=morphFormAttributes",tokenId:"="},link:function(d,e,f){var g=d.tokenId;d.m=a,d.attrs=a.sortAttributes(d.form.attributes),d.inv=d.form.lexInv,d.askForRemoval=function(){d.confirmationRequested=!0},d.skipRemoval=function(){d.confirmationRequested=!1},d.removeForm=function(){d.form.selected&&a.unsetState(g),a.removeForm(g,d.form),b.success("Removed form of "+c.asString(g))}},templateUrl:"templates/arethusa.morph/morph_form_attributes.html"}}]),angular.module("arethusa.morph").directive("morphFormCreate",["morph","state","notifier","translator","morphLocalStorage",function(a,b,c,d,e){return{restrict:"E",scope:{token:"=morphToken",id:"=morphId"},link:function(e,f,g,h){function i(a,b){if(!a)return!0;var c=!0;for(var d in a){var e;if(e=j(a,d),e=b?e:!e){c=!1;break}}return c}function j(a,b){var c=a[b];return"*"===c?angular.isDefined(e.form.attributes[b]):v(arethusaUtil.toAry(c),e.form.attributes[b])}function k(a){return i(a,!1)}function l(a){return i(a,!0)}function m(a){var b;if(a)for(var c=a.length-1;c>=0;c--){var d=a[c],e=k(d["if"]),f=l(d.unless);if(e&&f){b=!0;break}}else b=!0;return b}function n(){return arethusaUtil.inject([],a.postagSchema,function(b,c){m(a.rulesOf(c))&&b.push(c)})}function o(){e.visibleAttributes=n()}function p(){w.find("input").addClass("warn"),d("morph.lemmaHint",function(a){e.lemmaHint=a})}function q(){w.find("input").removeClass("warn"),e.lemmaHint=""}function r(){var a=arethusaUtil.inject({},e.visibleAttributes,function(a,b){a[b]=e.form.attributes[b]});e.form.attributes=a}function s(){e.form.origin="you"}function t(){var d=angular.copy(e.form);e.forms.push(d),a.setState(e.id,d),a.addToLocalStorage(e.token.string,d),u(d);var f=b.asString(e.id),g=e.translations.createSuccess({form:f});c.success(g)}function u(c){var d=e.token.string;angular.forEach(b.tokens,function(b,f){if(f!==e.id&&b.string===d){var g=a.analyses[f],h=angular.copy(c);h.selected=!1,g.forms.push(h),a.hasSelection(g)||a.setState(f,h)}})}var v=arethusaUtil.isIncluded,w=f.find("#lemma-form");e.translations=d({"morph.createSuccess":"createSuccess","morph.createError":"createError"}),e.m=a,e.form=e.token.customForm,e.forms=e.token.forms,e.declareOk=function(){q()},e.reset=function(){e.resetAlert(),p(),a.resetCustomForm(e.token,e.id)},e.resetAlert=function(){e.alert=!1},e.save=function(a){a?(r(),s(),t(),e.reset()):e.alert=!0},e.$watch("form.attributes",function(a,b){o()},!0),e.$watch("token.customForm",function(a,b){e.form=a}),f.on("show-mfc"+e.id,function(){var a=angular.element(document.getElementById("sidepanel"));a.scrollTo(f.children(),0,500)}),p()},templateUrl:"templates/morph_form_create.html"}}]),angular.module("arethusa.morph").directive("morphFormEdit",function(){return{restrict:"E",templateUrl:"templates/morph_form_edit.html"}}),angular.module("arethusa.morph").service("fakeMorphRetriever",function(){this.getStubData=function(a){var b=$.ajax({url:"./static/analyses.json",async:!1});b.done(a)};var a;this.getStubData(function(b){a=b}),this.getData=function(b,c){var d=a[b]||[];c(d)}}),angular.module("arethusa.morph").service("LexicalInventoryRetriever",["configurator",function(a){function b(a){var b="        select ?object from <http://data.perseus.org/ds/lexical>        where {<"+a+">          <http://purl.org/dc/terms/isReferencedBy> ?object        }      ";return b}function c(a){return a.match("alpheios")?"Alpheios":a.match("logeion")?"Logeion":a.match("perseus")?"Perseus":void 0}function d(a){var b=a.results.bindings;return arethusaUtil.inject({},b,function(a,b){var d=b.object.value;a[c(d)]=d})}return function(c){var e=a.provideResource(c.resource);this.getData=function(a,c){c.lexInv={uri:c.lexInvLocation.uri,urn:c.lexInvLocation.urn};var f=b(a);e.get({query:f}).then(function(a){c.lexInv.dictionaries=d(a.data)})}}}]),angular.module("arethusa.morph").service("morph",["state","configurator","plugins","globalSettings","keyCapture","morphLocalStorage","commons","saver","navigator","exitHandler",function(a,b,c,d,e,f,g,h,i,j){function k(){ea&&angular.forEach(ea,l)}function l(a){var b=a.abort;angular.isFunction(b)&&b()}function m(){var a=["postagSchema","attributes","mappings","noRetrieval","gloss","localStorage","storePreferences"];b.getConfAndDelegate(da,a),b.getStickyConf(da,["preselect","matchAll"]),da.analyses={},ea=b.getRetrievers(da.conf.retrievers),r(ea),da.localStorage&&(ea.localStorage=f.retriever,f.comparator=D),o(),da.conf.lexicalInventory&&(fa=b.getRetriever(da.conf.lexicalInventory.retriever)),ia=void 0,ga={}}function n(a,b){a.values["---"]=ha}function o(){angular.forEach(da.attributes,n)}function p(a){for(var b=da.mappings[a];angular.isString(b);)b=da.mappings[a];return b||{}}function q(a,b){a.mapping=p(b)}function r(a){angular.forEach(a,q)}function s(a){if(fa&&a.lexInvLocation){var b=a.lexInvLocation.urn;fa.getData(b,a)}}function t(a){this.string=a,this.forms=[],this.analyzed=!1}function u(){return arethusaUtil.inject({},a.tokens,function(a,b,c){a[b]=new t(c.string)})}function v(){return arethusaUtil.map(da.postagSchema,function(a){return"-"}).join("")}function w(){return arethusaUtil.inject({},da.postagSchema,function(a,b){a[b]=void 0})}function x(b,c){var d=a.tokens[c].morphology;if(d){var e=d.attributes;if(y(d.postag))da.postagToAttributes(d);else{if(!e)return;d.postag=da.attributesToPostag(e)}d.origin="document",d.selected=!0,O(c,d),b.forms.push(d),P()&&a.addStyle(c,da.styleOf(d))}}function y(a){return a&&!a.match(/^-*$/)}function z(a){return arethusaUtil.inject({},da.postagSchema,function(b,c){var d=a[c];if(d){var e=da.attributeValues(c),f=arethusaUtil.findObj(e,function(a){return a["short"]===d||a["long"]===d});b[c]=f?f["short"]:d}})}function A(b,c){0===b.length&&P()&&a.unsetStyle(c)}function B(a){return aU.unique(a,function(a,b){return a.lemma===b.lemma&&a.postag===b.postag})}function C(a,b){if(a&&"document"===a.origin){for(var c,d=b.length-1;d>=0;d--){var e=b[d];if(D(a,e)){c=e;break}}if(c){var f=a.selected;angular.extend(a,c),a.origin="document",a.selected=f,b.splice(b.indexOf(c),1)}}}function D(a,b){return a.lemma===b.lemma&&a.postag===b.postag}function E(b){return a.getToken(b).morphology}function F(b,c){b&&E(c)!==b&&a.doSilent(function(){da.setState(c,b)})}function G(){"all"!==da.noRetrieval&&angular.forEach(da.analyses,H)}function H(a,b){x(a,b),"online"!==da.noRetrieval?da.getExternalAnalyses(a,b):A(a.forms,b),a.analyzed=!0,da.resetCustomForm(a,b)}function I(a,b){a.forms.length>0&&(da.hasSelection(a)||da.setState(b,a.forms[0]))}function J(){angular.forEach(da.analyses,I)}function K(){var a=["long","postag"],b=[],c={header:a,maps:b};return angular.forEach(da.attributes,function(c,d){var e={},f={label:c["long"],colors:e};aU.inject(e,c.values,function(b,c,d){var e=aU.flatten(aU.map(a,d)).join(" || ");b[e]=d.style}),b.push(f)}),c}function L(a){angular.forEach(da.analyses[a].forms,function(a,b){a.selected=!1})}function M(a){var b=E(a);return b?function(){da.setState(a,b)}:function(){da.unsetState(a)}}function N(b,c){return function(){W(b),V(c,b),L(b),c.selected=!0,P()&&a.addStyle(b,da.styleOf(c))}}function O(a,b){da.gloss&&(da.analyses[a].gloss=b.gloss)}function P(){return d.isColorizer("morph")}function Q(a){var b=E(a);return function(){da.setState(a,b)}}function R(b){return function(){W(b),L(b),E(b).selected=!1,P()&&a.unsetStyle(b)}}function S(a){return arethusaUtil.inject({},a,function(a,b){var c=ga[b]||[];angular.forEach(c,function(b,c){a[b]=!0})})}function T(a){var b=a.shift(),c=ga[b]||[];return angular.forEach(a,function(a,b){var d=ga[a]||[];c=arethusaUtil.intersect(c,d)}),arethusaUtil.inject({},c,function(a,b){a[b]=!0})}function U(){angular.forEach(a.tokens,function(a,b){var c=a.morphology||{};V(c,b)})}function V(a,b){var c=a.attributes||{};angular.forEach(c,function(a,c){ga[a]||(ga[a]=[]),ga[a].push(b)})}function W(b){var c=a.getToken(b).morphology||{},d=c.attributes||{};angular.forEach(d,function(a,c){var d=ga[a];if(d)for(var e=d.indexOf(b);-1!==e;)d.splice(e,1),e=d.indexOf(b)})}function X(b){if(c.isSelected(da)){var d=a.hasClickSelections();1===d&&b()}}function Y(b){var c,d=Object.keys(a.clickedTokens)[0],e=da.analyses[d].forms,f=e.indexOf(E(d));c=b?f===e.length-1?0:f+1:0===f?e.length-1:f-1,da.setState(d,e[c])}function Z(){X(function(){Y(!0)})}function $(){X(function(){Y()})}function _(){ka=!0}function aa(a,b){return f.sortByPreference(a,b)}function ba(){ka&&da.storePreferences&&(angular.forEach(a.tokens,ca),ka=!1)}function ca(a){a.morphology&&a.morphology.postag&&f.addPreference(a.string,a.morphology)}var da=this;this.name="morph";var ea,fa,ga;d.addColorizer("morph"),this.canSearch=!0,this.defaultConf={mappings:{},gloss:!1,matchAll:!0,preselect:!1,localStorage:!0,storePreferences:!0};var ha={"long":"---","short":"---",postag:"_"};this.postagToAttributes=function(a){var b={};angular.forEach(a.postag,function(a,c){var d=da.postagSchema[c],e=da.attributeValues(d),f=arethusaUtil.findObj(e,function(b){return b.postag===a});f&&(b[d]=f["short"])}),a.attributes=b},this.updatePostag=function(a,b,c){var d=da.postagSchema.indexOf(b),e=da.postagValue(b,c);a.postag=arethusaUtil.replaceAt(a.postag,d,e)},this.attributesToPostag=function(a){var b=arethusaUtil.map(da.postagSchema,function(b){var c=da.attributeValues(b),d=a[b],e=arethusaUtil.findObj(c,function(a){return a["short"]===d||a["long"]===d});return e?e.postag:"-"});return b.join("")},this.emptyForm=function(a){return{lemma:a,postag:da.emptyPostag,attributes:w()}},this.getExternalAnalyses=function(a,b){angular.forEach(ea,function(c,d){c.getData(a.string,function(c){c.forEach(function(a){a.attributes=z(a.attributes),a.postag=da.attributesToPostag(a.attributes),s(a)});var d=a.string,e=a.forms;C(e[0],c);var f=B(c);arethusaUtil.pushAll(e,f),da.storePreferences&&aa(d,e),da.preselect&&F(e[0],b),A(e,b)})})},da.preselectToggled=function(){da.preselect&&J()},this.hasSelection=function(a){for(var b,c=a.forms.length-1;c>=0;c--)if(a.forms[c].selected){b=!0;break}return b},da.resetCustomForm=function(b,c){var d=a.asString(c);b.customForm=da.emptyForm(d)},this.currentAnalyses=function(){var b=da.analyses;return arethusaUtil.inject({},a.selectedTokens,function(a,c,d){var e=b[c];e&&(a[c]=e)})},this.selectAttribute=function(a){return da.attributes[a]||{}},this.longAttributeName=function(a){return da.selectAttribute(a)["long"]},this.attributeValues=function(a){return da.selectAttribute(a).values||{}},this.attributeValueObj=function(a,b){return da.attributeValues(a)[b]||{}},this.longAttributeValue=function(a,b){return da.attributeValueObj(a,b)["long"]},this.abbrevAttributeValue=function(a,b){return da.attributeValueObj(a,b)["short"]},this.postagValue=function(a,b){return da.attributeValueObj(a,b).postag},this.concatenatedAttributes=function(a){var b=[];return angular.forEach(a.attributes,function(a,c){b.push(da.abbrevAttributeValue(c,a))}),b.join(".")},this.sortAttributes=function(a){return arethusaUtil.inject([],da.postagSchema,function(b,c){var d=a[c];d&&b.push({attr:c,val:d})})};var ia;this.colorMap=function(){return ia||(ia=K()),ia},this.applyStyling=function(){angular.forEach(a.tokens,function(b,c){var d=b.morphology;d?a.addStyle(c,da.styleOf(d)):a.unsetStyle(c)})},this.styleOf=function(a){var b={};return angular.forEach(a.attributes,function(a,c){var d=da.attributeValueObj(c,a).style;angular.extend(b,d)}),b},this.removeForm=function(b,c){var d=da.analyses[b].forms,e=d.indexOf(c);da.removeFromLocalStorage(a.asString(b),c),d.splice(e,1)},this.addToLocalStorage=function(a,b){da.localStorage&&f.addForm(a,b)},this.removeFromLocalStorage=function(a,b){da.localStorage&&f.removeForm(a,b)},this.updateGloss=function(b,c){if(da.gloss){a.broadcast("tokenChange");var d=da.analyses[b].gloss||"";c=c||E(b),c.gloss=d}},this.setState=function(b,c){da.updateGloss(b),a.change(b,"morphology",c,M(b),N(b,c))},this.unsetState=function(b){a.change(b,"morphology",null,Q(b),R(b))},this.rulesOf=function(a){return da.selectAttribute(a).rules},this.queryForm=function(){var b=da.formQuery.split(" "),c=da.matchAll?T(b):S(b);a.multiSelect(Object.keys(c))},this.canEdit=function(){return"editor"===da.mode},a.on("tokenAdded",function(a,b){var c=b.id,d=new t(b.string);da.analyses[c]=d,b.morphology={},H(d,c)}),a.on("tokenRemoved",function(a,b){var c=b.id;W(c),delete da.analyses[c]}),this.activeKeys={};var ja=e.initCaptures(function(a){return{morph:[a.create("selectNextForm",function(){a.doRepeated(Z)},"↓"),a.create("selectPrevForm",function(){a.doRepeated($)},"↑")]}});angular.extend(da.activeKeys,ja.selections),this.settings=[g.setting("Expand Selected","expandSelection"),g.setting("Store Preferences","storePreferences"),g.setting("Preselect","preselect",this.preselectToggled)];var ka;h.onSuccess(_),i.onMove(ba),j.onLeave(ba),this.init=function(){k(),m(),da.emptyPostag=v(),da.analyses=u(),G(),U(),c.declareReady(da)}}]),angular.module("arethusa.morph").service("morphLocalStorage",["plugins","arethusaLocalStorage","_",function(a,b,c){function d(a){return z.localStorageKey+"."+a}function e(a){return z.preferenceKey+"."+a}function f(a,b){var c=g(a);b(c)}function g(a){return b.get(d(a))||[]}function h(a){return b.get(e(a))||""}function i(a,c){b.set(d(a),c)}function j(a,c){return b.set(e(a),c)}function k(a,b){var c=g(a)||[],d=angular.copy(b);d.selected=!1,c.push(d),i(a,c)}function l(a,b){var d=g(a)||[],e=c.map(d,s);c.forEach(b,function(a){c.contains(e,s(a))||d.push(a)}),i(a,d)}function m(a,b){var c=g(a);if(c){var d=aU.find(c,function(a){return z.comparator(b,a)});d&&c.splice(c.indexOf(d),1),i(a,c)}}function n(a,b,d){d=parseInt(d)||1;var e=s(b),f=q(a,e),g=f[e],h=g?g+d:1;f[e]=h;var i=p(f),k=c.map(i,function(a){return a[0]+x+a[1]}).join(x);j(a,k)}function o(a,b){var d=b.split(w);return c.forEach(d,function(b){var c=b.split(x),d=c[0].split(y),e=c[1],f=d[0],g=d[1];n(a,{lemma:f,postag:g},e)})}function p(a){return c.map(a,function(a,b){return[b,a]}).sort(function(a,b){return a[1]<b[1]})}function q(a){var b=h(a).split(w);return c.inject(c.filter(b),function(a,b){var c=b.split(x);return a[c[0]]=parseInt(c[1]),a},{})}function r(a,b){var d=q(a),e=c.inject(b,function(a,b){return a[s(b)]=b,a},{});return c.forEachRight(p(d),function(a){var c=e[a[0]];if(c){{b.splice(b.indexOf(c),1)}b.unshift(c)}}),b}function s(a){return a.lemma+y+a.postag}function t(){return v(z.localStorageKey)}function u(){return v(z.preferenceKey)}function v(a){return c.inject(b.keys(),function(c,d){var e=d.match("^"+a+".(.*)");return e&&(c[e[1]]=b.get(d)),c},{})}var w=";;",x="@@",y="|-|",z=this;this.localStorageKey="morph.forms",this.preferenceKey="morph.prefs",this.delimiters={preference:w,count:x,lemmaToPostag:y},this.retriever={getData:f,abort:function(){}},this.addForm=k,this.addForms=l,this.removeForm=m,this.addPreference=n,this.addPreferences=o,this.sortByPreference=r,this.getForms=t,this.getPreferences=u}]),angular.module("arethusa.morph").run(["$templateCache",function(a){a.put("templates/arethusa.morph/context_menu.html","<div>{{ plugin.concatenatedAttributes(token.morphology) }}</div>\n"),a.put("templates/arethusa.morph/morph_form_attributes.html",'<div class="small-12 columns note">\n  <alert\n    class="error radius center fade-in"\n    ng-if="confirmationRequested">\n    Do you really want to remove this form?\n    <div class="small-1 columns">\n      <i ng-click="removeForm()" class="clickable fi-check"></i>\n    </div>\n    <div class="small-1 columns">\n      <i ng-click="skipRemoval()" class="clickable fi-x"></i>\n    </div>\n  </alert>\n\n  <div class="right">\n    <a\n      mirror-morph-form="form"\n      reveal-toggle="mfc{{ tokenId }}"\n      always-reveal="true"\n      token-id="tokenId">\n      Create new\n    </a>\n    <span>&nbsp;-&nbsp;</span>\n    <a\n      target="_blank"\n      href="http://http://www.perseus.tufts.edu/">\n      Report Error\n    </a>\n    <span>&nbsp;-&nbsp;</span>\n    <a\n      ng-click="askForRemoval()">\n      Remove Form\n    </a>\n  </div>\n</div>\n<div class="small-12 columns text" ng-repeat="o in attrs">\n  <span class="small-5 columns note">\n    <span class="right">{{ m.longAttributeName(o.attr) }}</span>\n  </span>\n  <span class="small-7 columns"> {{ m.longAttributeValue(o.attr, o.val) }}</span>\n</div>\n\n\n<div ng-if="inv" class="small-12 columns">\n  <hr>\n  <div>\n    <p>\n      <span class="small-8 columns"><em>Lexical Inventory</em></span>\n      <span class="small-4 columns note">\n        <a href="{{ inv.uri }}" target="_blank">{{ inv.urn }}</a>\n      </span>\n    </p>\n  </div>\n  <br>\n  <div class="small-12 columns" style="margin-top: 1em">\n    <ul class="text">\n      <li>Dictionary Entries\n        <ul class="text">\n          <li ng-repeat="(name, link) in inv.dictionaries">\n            <a href="{{ link }}" target="_blank">{{ name }}</a>\n          </li>\n        </ul>\n      </li>\n    </ul>\n  </div>\n</div>\n'),a.put("templates/arethusa.morph/search.html",'<div class="row">\n<div class="small-12 columns">\n  <label>\n    <span translate="morph.searchByForm"/>\n    <div class="row collapse">\n    <div class="small-10 columns">\n      <input type="search"\n        ng-change="plugin.queryForm()"\n        ng-model="plugin.formQuery" />\n    </div>\n    <div class="small-2 columns">\n    <label class="postfix">\n      <span translate="morph.matchAll"/>\n      <input\n        type="checkbox"\n        ng-change="plugin.queryForm()"\n        ng-model="plugin.matchAll"/>\n    </label>\n    </div>\n    </div>\n  </label>\n</div>\n</div>\n\n')}]);
//# sourceMappingURL=arethusa.morph.min.map